name: Publish NPM package + Docs
on:
  release:
    types: [created]
jobs:
  publish_npm:
     runs-on: ubuntu-latest
     steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
        
      - name: Install Dependencies
        run: npm install
        
      - name: Publish NPM package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  
  publish_docs:
    runs-on: ubuntu-latest
    needs: publish_npm
    steps:
      - name: Checkout play audio
        uses: actions/checkout@v2

      - name: Checkout play audio GitHub page repo
        uses: actions/checkout@v2
        with:
            ref: gh-pages
            path: docs

      - name: Setup Node 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install Dependencies
        run: npm install
        
      - name: Deleting default exports for ESM.
        run: node .github/docs.js

      - name: TypeDoc
        run: npx typedoc

      - name: Adding, committing and Pushing
        run: |
          cd docs/
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add *
          git commit -m "Automated Docs"
          git push

  publish_ffmpeg:
    runs-on: ubuntu-latest
    needs: publish_docs
    steps:
      - name: Checkout play audio GitHub page repo
        uses: actions/checkout@v2
        with:
            ref: gh-pages
      
      - name: Installing Some dependencies
        run: |
          sudo apt update
          sudo apt install p7zip curl unzip tar -y

      - name: Preparation
        run: |
          mkdir binaries
          mkdir binaries/win32-x64/ binaries/win32-ia32/
          mkdir binaries/linux-x64/ binaries/linux-ia32/ binaries/linux-arm/ binaries/linux-arm64/
          mkdir binaries/darwin-x64/ binaries/darwin-arm64/

      - name: Downloading Windows x64 FFMPEG
        run: |
          mkdir temp
          cd temp
          curl -L https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.7z -o windows.7z
          7zr x windows.7z
          cp ffmpeg-*_build/bin/ffmpeg.exe ../binaries/win32-x64/ffmpeg.exe
          cd ..
          rm -r temp

      - name: Downloading Windows ia32 FFMPEG
        run: |
          mkdir temp
          cd temp
          curl -L https://github.com/sudo-nautilus/FFmpeg-Builds-Win32/releases/download/latest/ffmpeg-master-latest-win32-gpl.zip -o windows.zip
          unzip windows.zip
          cp ffmpeg-*-gpl/bin/ffmpeg.exe ../binaries/win32-ia32/ffmpeg.exe
          cd ..
          rm -r temp
      
      - name: Downloading Linux x64 FFMPEG
        run: |
          mkdir temp
          cd temp
          curl -L https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-amd64-static.tar.xz -o linux.tar.xz
          tar xvf linux.tar.xz
          cp ffmpeg-*-static/ffmpeg ../binaries/linux-x64/ffmpeg
          cd ..
          rm -r temp
      
      - name: Downloading Linux ia32 FFMPEG
        run: |
          mkdir temp
          cd temp
          curl -L https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-i686-static.tar.xz -o linux.tar.xz
          tar xvf linux.tar.xz
          cp ffmpeg-*-static/ffmpeg ../binaries/linux-ia32/ffmpeg
          cd ..
          rm -r temp
      
      - name: Downloading Linux arm FFMPEG
        run: |
          mkdir temp
          cd temp
          curl -L https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-armhf-static.tar.xz -o linux.tar.xz
          tar xvf linux.tar.xz
          cp ffmpeg-*-static/ffmpeg ../binaries/linux-arm/ffmpeg
          cd ..
          rm -r temp
      
      - name: Downloading Linux arm64 FFMPEG
        run: |
          mkdir temp
          cd temp
          curl -L https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-arm64-static.tar.xz -o linux.tar.xz
          tar xvf linux.tar.xz
          cp ffmpeg-*-static/ffmpeg ../binaries/linux-arm64/ffmpeg
          cd ..
          rm -r temp

      - name: Downloading MacOs x64 FFMPEG
        run: |
          mkdir temp
          cd temp
          curl -L https://evermeet.cx/ffmpeg/ffmpeg-4.4.1.7z -o darwin.7z
          7zr x darwin.7z
          cp ffmpeg ../binaries/darwin-x64/ffmpeg
          cd ..
          rm -r temp

      - name: Downloading MacOs arm64 FFMPEG
        run: |
          mkdir temp
          cd temp
          curl -L https://www.osxexperts.net/FFmpeg441.zip -o darwin.zip
          unzip darwin.zip
          cp ffmpeg ../binaries/darwin-arm64/ffmpeg
          cd ..
          rm -r temp

      - name: Adding, committing and Pushing
        run: |
          rm -r temp
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add *
          git commit -m "Automated FFmpeg Binaries updated"
          git push